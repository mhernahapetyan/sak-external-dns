name: reviewdog
on:
  pull_request:
    paths:
    - '**.tf'
    - '**.tfvars'
    - '**.tfvars.json'
env:
  TERRAFORM_VERSION: "1.0.6"

jobs:

  tflint:
    name: runner / tflint
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@master

      # Install latest Terraform manually as
      #  Docker-based GitHub Actions are
      #  slow due to lack of caching
      # Note: Terraform is not needed for tflint
      - name: Install Terraform
        run: |
          brew install tfenv
          tfenv install ${TERRAFORM_VERSION}

      # Run init to get module code to be able to use `--module`
      - name: Terraform init common
        run: |
          tfenv use ${TERRAFORM_VERSION}
          terraform init --upgrade

      # More complex example
      - name: tflint common
        uses: reviewdog/action-tflint@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review # Optional. Change reporter
          fail_on_error: "true" # Optional. Fail action if errors are found
          filter_mode: "nofilter" # Optional. Check all files, not just the diff
          level: info
          flags: "--module" # Optional. Add custom tflint flags
  test-check:
    name: tfsec (github-check)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./
        continue-on-error: true
        id: test
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: info
          working_directory: sak-external-dns

      # The check is expected to fail on the test data
      - name: Check return codes
        if: success() || failure ()
        run: |
          tfsec_return="${{ steps.test.outputs.tfsec-return-code }}"
          reviewdog_return="${{ steps.test.outputs.reviewdog-return-code }}"
          if [[ "$tfsec_return" -eq 1 ]]; then
            echo "tfsec correctly returned failure ${tfsec_return}"
          else
            echo "tfsec returned ${tfsec_return}, expected '1'. Failing..."
            exit 1
          fi
          if [[ "$reviewdog_return" -eq 0 ]]; then
            echo "reviewdog correctly returned success: ${reviewdog_return}"
          else
            echo "reviewdog returned ${reviewdog_return}, expected '0'. Failing..."
            exit 1
          fi
  test-pr-check:
    if: github.event_name == 'pull_request'
    name: tfsec (github-pr-check)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./
        continue-on-error: true
        id: test
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          level: info
          working_directory: testdata

      # The check is expected to fail on the test data
      - name: Check return codes
        if: success() || failure ()
        run: |
          tfsec_return="${{ steps.test.outputs.tfsec-return-code }}"
          reviewdog_return="${{ steps.test.outputs.reviewdog-return-code }}"
          if [[ "$tfsec_return" -eq 1 ]]; then
            echo "tfsec correctly returned failure ${tfsec_return}"
          else
            echo "tfsec returned ${tfsec_return}, expected '1'. Failing..."
            exit 1
          fi
          if [[ "$reviewdog_return" -eq 0 ]]; then
            echo "reviewdog correctly returned success: ${reviewdog_return}"
          else
            echo "reviewdog returned ${reviewdog_return}, expected '0'. Failing..."
            exit 1
          fi
  test-pr-review:
    if: github.event_name == 'pull_request'
    name: tfsec (github-pr-review)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ./
        continue-on-error: true
        id: test
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          level: info
          working_directory: sak-external-dns

      # The check is expected to fail on the test data
      #  but for forked PRs reviewdog will just output
      #  on the PR and report success
      - name: Check return codes
        if: success() || failure ()
        run: |
          tfsec_return="${{ steps.test.outputs.tfsec-return-code }}"
          reviewdog_return="${{ steps.test.outputs.reviewdog-return-code }}"
          if [[ "$tfsec_return" -eq 1 ]]; then
            echo "tfsec correctly returned failure ${tfsec_return}"
          else
            echo "tfsec returned ${tfsec_return}, expected '1'. Failing..."
            exit 1
          fi
          if [[ "$reviewdog_return" -eq 0 ]]; then
            echo "reviewdog correctly returned success: ${reviewdog_return}"
          else
            echo "reviewdog returned ${reviewdog_return}, expected '0'. Failing..."
            exit 1
          fi
